[{"C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\index.js":"1","C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\App.js":"2","C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\FolderScreen.js":"3","C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\Header.js":"4","C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\HomeScreen.js":"5"},{"size":219,"mtime":1609227775608,"results":"6","hashOfConfig":"7"},{"size":480,"mtime":1609236585563,"results":"8","hashOfConfig":"7"},{"size":2928,"mtime":1609240599258,"results":"9","hashOfConfig":"7"},{"size":356,"mtime":1609150189720,"results":"10","hashOfConfig":"7"},{"size":2748,"mtime":1609240603753,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"t14f0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\index.js",[],["26","27"],"C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\App.js",["28"],"\nimport HomeScreen from \"./HomeScreen\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport FolderScreen from \"./FolderScreen\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n  <BrowserRouter> \n    <Switch>\n    <div className=\"App\">\n      {/* <Header /> */}\n      <Route exact path=\"/\" component={HomeScreen} />\n      <Route exact path=\"/folder/:id\" component={FolderScreen} />\n    </div>\n    </Switch>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\FolderScreen.js",["29","30","31","32"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction FolderScreen(props) {\r\n\r\n    const parentId = props.match.params.id;\r\n    const [subFolders, setSubFolders] = useState([]);\r\n    const [subFolderss, setSubFolderss] = useState([\"1\"]);\r\n    const [subFiles, setSubFiles] = useState([]);\r\n    const [fileName, setFileName] = useState(null);\r\n    const [folderName, setFolderName] = useState(\"\");\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const {data} = await axios.get(\"/folder/\"+parentId);\r\n            setSubFolders(data.folders);\r\n            setSubFiles(data.files);\r\n        }\r\n        fetchData();\r\n        return () => {\r\n        }\r\n    }, [subFolderss] || [])\r\n    \r\n\r\n    const submitFileHandler = async () => {\r\n      const data = new FormData();\r\n      \r\n        data.append(\r\n          \"myfile\", fileName\r\n        ); \r\n      \r\n        console.log(data);\r\n\r\n        const result = await axios.post(\"/createfile/\"+parentId, data);\r\n      if(result){\r\n        console.log(\"added\");\r\n        window.location.reload(false);\r\n      }\r\n      return <div>Hello</div>\r\n    }\r\n  \r\n      const submitFolderHandler = async () => {\r\n        const result = await axios.post(\"/createfolder\", {name: folderName, parentId});\r\n        if(result){\r\n          console.log(\"added\");\r\n          window.location.reload(false);\r\n        }\r\n        return <div>Hello</div>\r\n      }\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"forms\">\r\n          <div className=\"file-form\">\r\n              <h2 className=\"heading\">Create File</h2>\r\n              <input id=\"upload\" type=\"file\" onChange={(e) => setFileName(e.target.files[0])} />\r\n              <button className=\"submit\" type=\"submit\" onClick={submitFileHandler}>Submit</button>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div className=\"folder-form\">\r\n              <h2 className=\"heading\">Create Folder</h2>\r\n              <input type=\"text\" onChange={(e) => setFolderName(e.target.value)} />\r\n              <button className=\"submit\" type=\"submit\" onClick={submitFolderHandler}>Submit</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"activities-grid\">\r\n          {\r\n                  subFolders.map(item => (\r\n                    <Link onClick={() => setSubFolderss([])} to={\"/folder/\" + item._id} >\r\n                      <div className=\"folder\" key={item._id}><img src=\"/images/folder.png\" /><h2 key={item._id}>{item.name}</h2></div>\r\n                    </Link>\r\n                  ))\r\n                }\r\n            {\r\n                subFiles.map((file) => (\r\n                  <div className=\"file\" key={file._id} id=\"link\"><a href={file.downloadURL}><img src=\"/images/file.png\" />{file.name}</a></div>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FolderScreen\r\n","C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\Header.js",[],"C:\\Users\\91910\\Desktop\\Projects\\MERN\\folder_app\\frontend\\src\\HomeScreen.js",["33","34"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeScreen(props) {\r\n\r\n  const [folders, setFolders] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [fileName, setFileName] = useState(null);\r\n  const [folderName, setFolderName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          const {data} = await axios.get(\"/data\");\r\n          setFolders(data.folders);\r\n          setFiles(data.files);\r\n        }\r\n        fetchData();\r\n      return () => {\r\n        \r\n      }\r\n    }, []);\r\n\r\n    const submitFileHandler = async () => {\r\n      const data = new FormData(); \r\n      \r\n        data.append(\r\n          \"myfile\", fileName\r\n        ); \r\n\r\n        const result = await axios.post(\"/createfile\", data);\r\n      if(result){\r\n        console.log(\"added\");\r\n        window.location.reload(false);\r\n      }\r\n      return <div>Hello</div>\r\n    }\r\n\r\n    const submitFolderHandler = async () => {\r\n      const result = await axios.post(\"/createfolder\", {name: folderName});\r\n      if(result){\r\n        console.log(\"added\");\r\n        window.location.reload(false);\r\n      }\r\n      return <div>Hello</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <h1 className=\"welcome\"><u>Welcome to Own Drive</u></h1>\r\n          <div className=\"forms\">\r\n          <div className=\"file-form\">\r\n              <h2 className=\"heading\">Create File</h2>\r\n              <input id=\"upload\" type=\"file\" onChange={(e) => setFileName(e.target.files[0])} />\r\n              <button className=\"submit\" type=\"submit\" onClick={submitFileHandler}>Submit</button>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div className=\"folder-form\">\r\n              <h2 className=\"heading\">Create Folder</h2>\r\n              <input type=\"text\" onChange={(e) => setFolderName(e.target.value)} />\r\n              <button className=\"submit\" type=\"submit\" onClick={submitFolderHandler}>Submit</button>\r\n            </div>\r\n          </div>\r\n            <div className=\"activities-grid\">\r\n                {\r\n                  folders.map(item => (\r\n                    <Link to={\"/folder/\" + item._id}>\r\n                      <div className=\"folder\" key={item._id}><img src=\"/images/folder.png\" /><h2>{item.name}</h2></div>\r\n                    </Link>\r\n                  ))\r\n                }\r\n                {\r\n                  files.map(item => (\r\n                      <div className=\"file\" key={item._id} id=\"link\"><a href={`http://localhost:8080/download/` + item.uuid}><img src=\"/images/file.png\" />{item.name}</a></div>\r\n                  ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":22,"column":8,"nodeType":"45","endLine":22,"endColumn":27},{"ruleId":"43","severity":1,"message":"46","line":22,"column":8,"nodeType":"45","endLine":22,"endColumn":27,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":71,"column":62,"nodeType":"50","endLine":71,"endColumn":94},{"ruleId":"48","severity":1,"message":"49","line":77,"column":93,"nodeType":"50","endLine":77,"endColumn":123},{"ruleId":"48","severity":1,"message":"49","line":69,"column":62,"nodeType":"50","endLine":69,"endColumn":94},{"ruleId":"48","severity":1,"message":"49","line":75,"column":126,"nodeType":"50","endLine":75,"endColumn":156},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","LogicalExpression","React Hook useEffect has a missing dependency: 'parentId'. Either include it or remove the dependency array.",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [parentId]",{"range":"56","text":"57"},[762,781],"[parentId]"]